---
name: terracotta
packages:
- java7
- terracotta
templates:
  bin/terracotta_ctl: bin/terracotta_ctl
  bin/monit_debugger: bin/monit_debugger
  data/properties.sh.erb: data/properties.sh
  helpers/ctl_setup.sh: helpers/ctl_setup.sh
  helpers/ctl_utils.sh: helpers/ctl_utils.sh
  config/terracotta.xml.erb: config/terracotta.xml
  config/realm.properties.erb: config/realm.properties
properties:
  terracotta.servers:
    description: Array of hostnames/IPs for servers in the cluster
  terracotta.dso_port:
    description: |
      On what port should the DSO server listen for connections from DSO
      clients? This can be any port you like, but note that
      ports below 1024 typically require 'root' privileges to use
      on Un*x-style systems (Linux, Solaris). Optionally, you can bind
      the port to a specific interface.    
    default: 9510
  terracotta.jmx_port:
    description: |
      On what port should the server listen for connections from the
      Terracotta administration console? This can be any port you
      like, but note that ports below 1024 typically require 'root'
      privileges to use on Un*x-style systems (Linux, Solaris).
      Optionally, you can bind the port to a specific interface.
    default: 9520
  terracotta.l2_port:
    description: |
      On what port should the server listen for communication from
      other servers participating in an networked-active-passive setup.
      This can be any port you like, but note that ports below 1024
      typically require 'root' privileges to use on Un*x-style systems
      (Linux, Solaris). Optionally, you can bind the port to a specific
      interface.
    default: 9530
  terracotta.store_permanently:
    description: |
      How should DSO persist shared data to disk? This can be one of two values:
      'temporary-swap-only' causes the DSO server to use the
      disk as a temporary backing store. Data is not
      preserved across server restarts. This mode is somewhat
      faster than 'permanent-store' mode.
      'permanent-store' causes the DSO server to write data
      immediately and permanently to disk. Upon server restart,
      data will be restored, meaning data underneath roots
      in your program will be restored to the exact state it
      was in when the server shut down.
      Note that if you are using clustered DSO servers
      (you have more than one <server> element defined,
      below), then 'permanent-store' mode is recommended.
      This helps ensure proper operation of the DSO
      failover mechanism.
    default: false
  terracotta.verbose_logging:
    description: |
      If 'true', the DSO server will emit extra information
      to the log file when it performs distributed garbage
      collection; this can be useful when trying to
      performance-tune your application.
    default: false
  terracotta.disk_based:
    description: |
      This section allows you configure whether servers run in
      disk-based active-passive or network-based active-passive mode.
      There are two HA mode options: 'disk-based-active-passive' and 'networked-active-passive'.
    default: false
  terracotta.election_time:
    description: |
      This section allows you to declare the election time window,
      which is used when servers run in network-based active-passive mode.
      An active server is elected from the servers that cast a vote within
      this window. The value is specified in seconds. Network latency and
      work load of the servers should be taken into consideration when
      choosing an appropriate window.
    default: 5
  terracotta.version_check:
    description: |
      This element determines if the server will check for updates
      to the version of the Terracotta platform your are using. The server
      will contact the terracotta.org website and compare the version of
      your software with a registry of current releases. Information about
      new versions will be logged and displayed on the server's standard output.
    default: false
